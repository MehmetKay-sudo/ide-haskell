"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const atom_1 = require("atom");
const utils_1 = require("../utils");
class ResultItem {
    constructor(providerId, { uri, message, severity, position, context }) {
        this.providerId = providerId;
        this.uri = uri;
        this.message = utils_1.MessageObject.fromObject(message);
        this.severity = severity;
        this.position = position ? atom_1.Point.fromObject(position) : undefined;
        this.context = context;
        this._isValid = true;
    }
    isValid() {
        return this._isValid;
    }
    setValid(isValid) {
        this._isValid = isValid;
    }
    hash() {
        if (this._hash !== undefined) {
            return this._hash;
        }
        const h = crypto_1.createHash('sha1');
        h.update(JSON.stringify({
            uri: this.uri,
            position: this.position ? this.position.serialize() : undefined,
            message: this.message.raw(),
            severity: this.severity,
            context: this.context,
        }));
        this._hash = h.digest('base64');
        return this._hash;
    }
}
exports.ResultItem = ResultItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVzdWx0cy1kYi9yZXN1bHQtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFtQztBQUNuQywrQkFBNEI7QUFDNUIsb0NBQXdDO0FBR3hDLE1BQWEsVUFBVTtJQVFyQixZQUNrQixVQUFrQixFQUNsQyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQW1CO1FBRDlDLGVBQVUsR0FBVixVQUFVLENBQVE7UUFHbEMsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUE7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLHFCQUFhLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFBO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxZQUFLLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUE7UUFDakUsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUE7SUFDdEIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUE7SUFDdEIsQ0FBQztJQUVNLFFBQVEsQ0FBQyxPQUFnQjtRQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQTtJQUN6QixDQUFDO0lBRU0sSUFBSTtRQUNULElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDNUIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFBO1NBQ2xCO1FBQ0QsTUFBTSxDQUFDLEdBQUcsbUJBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUM1QixDQUFDLENBQUMsTUFBTSxDQUNOLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDYixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7WUFDYixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUztZQUMvRCxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7WUFDM0IsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztTQUN0QixDQUFDLENBQ0gsQ0FBQTtRQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUMvQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUE7SUFDbkIsQ0FBQztDQUNGO0FBN0NELGdDQTZDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUhhc2ggfSBmcm9tICdjcnlwdG8nXG5pbXBvcnQgeyBQb2ludCB9IGZyb20gJ2F0b20nXG5pbXBvcnQgeyBNZXNzYWdlT2JqZWN0IH0gZnJvbSAnLi4vdXRpbHMnXG5pbXBvcnQgKiBhcyBVUEkgZnJvbSAnYXRvbS1oYXNrZWxsLXVwaSdcblxuZXhwb3J0IGNsYXNzIFJlc3VsdEl0ZW0ge1xuICBwdWJsaWMgcmVhZG9ubHkgdXJpPzogc3RyaW5nXG4gIHB1YmxpYyByZWFkb25seSBwb3NpdGlvbj86IFBvaW50XG4gIHB1YmxpYyByZWFkb25seSBtZXNzYWdlOiBNZXNzYWdlT2JqZWN0XG4gIHB1YmxpYyByZWFkb25seSBzZXZlcml0eTogVVBJLlRTZXZlcml0eVxuICBwdWJsaWMgcmVhZG9ubHkgY29udGV4dD86IHN0cmluZ1xuICBwcml2YXRlIF9pc1ZhbGlkOiBib29sZWFuXG4gIHByaXZhdGUgX2hhc2g/OiBzdHJpbmdcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IHByb3ZpZGVySWQ6IG51bWJlcixcbiAgICB7IHVyaSwgbWVzc2FnZSwgc2V2ZXJpdHksIHBvc2l0aW9uLCBjb250ZXh0IH06IFVQSS5JUmVzdWx0SXRlbSxcbiAgKSB7XG4gICAgdGhpcy51cmkgPSB1cmlcbiAgICB0aGlzLm1lc3NhZ2UgPSBNZXNzYWdlT2JqZWN0LmZyb21PYmplY3QobWVzc2FnZSlcbiAgICB0aGlzLnNldmVyaXR5ID0gc2V2ZXJpdHlcbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb24gPyBQb2ludC5mcm9tT2JqZWN0KHBvc2l0aW9uKSA6IHVuZGVmaW5lZFxuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHRcbiAgICB0aGlzLl9pc1ZhbGlkID0gdHJ1ZVxuICB9XG5cbiAgcHVibGljIGlzVmFsaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzVmFsaWRcbiAgfVxuXG4gIHB1YmxpYyBzZXRWYWxpZChpc1ZhbGlkOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNWYWxpZCA9IGlzVmFsaWRcbiAgfVxuXG4gIHB1YmxpYyBoYXNoKCkge1xuICAgIGlmICh0aGlzLl9oYXNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLl9oYXNoXG4gICAgfVxuICAgIGNvbnN0IGggPSBjcmVhdGVIYXNoKCdzaGExJylcbiAgICBoLnVwZGF0ZShcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgdXJpOiB0aGlzLnVyaSxcbiAgICAgICAgcG9zaXRpb246IHRoaXMucG9zaXRpb24gPyB0aGlzLnBvc2l0aW9uLnNlcmlhbGl6ZSgpIDogdW5kZWZpbmVkLFxuICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UucmF3KCksXG4gICAgICAgIHNldmVyaXR5OiB0aGlzLnNldmVyaXR5LFxuICAgICAgICBjb250ZXh0OiB0aGlzLmNvbnRleHQsXG4gICAgICB9KSxcbiAgICApXG4gICAgdGhpcy5faGFzaCA9IGguZGlnZXN0KCdiYXNlNjQnKVxuICAgIHJldHVybiB0aGlzLl9oYXNoXG4gIH1cbn1cbiJdfQ==